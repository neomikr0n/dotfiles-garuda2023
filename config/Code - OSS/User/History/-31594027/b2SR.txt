autostart - bspwm
-----------------------------------------------------------------
# Apply colorscheme to spotify (requieres spicetify https://github.com/spicetify/spicetify-cli)
~/.bscripts/wal-spotify.sh > /dev/null&

# Source the colorscheme, can change the alpha value to be used in certain scripts
# like ~/.bscripts/rofi.sh
echo alpha="ff" >> "${HOME}/.cache/wal/colors.sh"
source "${HOME}/.cache/wal/colors.sh"

# Sounds
~/.bscripts/sounds.sh&

# Autosuspend
killall idle.sh
pgrep idle.sh || ~/.bscripts/idle.sh > /dev/null 2> /dev/null&



sxhkdrc
-----------------------------------------------------------------



hyprland.conf (BACKUP)
-----------------------------------------------------------------
# AUDIO
bind= SUPER CTRL ALT,Kp_End,exec,pactl set-default-sink alsa_output.usb-Topping_D30-00.pro-output-0; notify-send '🎧 AUDÍGENOS 🎧'
bind= SUPER CTRL ALT,Kp_Down,exec,pactl set-default-sink alsa_output.usb-Burr-Brown_from_TI_USB_Audio_DAC-00.iec958-stereo; notify-send "🔊 BOCINAS 🔊"

bind = , XF86AudioRaiseVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ +5% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1| awk '{print substr($5, 1, length($5)-1)}' > $XDG_RUNTIME_DIR/wob.sock
bind = , XF86AudioLowerVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ -5% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}' > $XDG_RUNTIME_DIR/wob.sock
bind = , XF86AudioMute, exec, pamixer --toggle-mute && ( [ "$(pamixer --get-mute)" = "true" ] && echo 0 > $WOBSOCK ) || pamixer --get-volume > $XDG_RUNTIME_DIR/wob.sock && notify-send -h  int:value:66 " MUTE "


# █▄▀ █▀▀ █▄█ █▄▄ █ █▄░█ █▀▄
# █░█ ██▄ ░█░ █▄█ █ █░▀█ █▄▀

# █▀ █▀▀ █▀█ █▀▀ █▀▀ █▄░█ █▀ █░█ █▀█ ▀█▀
# ▄█ █▄▄ █▀▄ ██▄ ██▄ █░▀█ ▄█ █▀█ █▄█ ░█░

$screenshotarea = hyprctl keyword animation "fadeOut,0,0,default"; grimblast --notify copysave area; hyprctl keyword animation "fadeOut,1,4,default"
bind = , Print, exec, $screenshotarea # screenshot on an area
bind = SUPER, Print, exec, grimblast --notify --cursor copysave output  # ALL MONITOR
bind = ALT, Print, exec, grimblast --notify --cursor copysave active    # only the current window
# bind=,Print,exec,grim $(xdg-user-dir PICTURES)/Screenshots/$(date +'%Y%m%d%H%M%S_1.png') && notify-send 'Screenshot Saved'
# bind=SUPER,Print,exec,grim - | wl-copy && notify-send 'Screenshot Copied to Clipboard'
# bind=SUPERSHIFT,Print,exec,grim - | swappy -f -
# bind=SUPERSHIFT,S,exec,slurp | grim -g - $(xdg-user-dir PICTURES)/Screenshots/$(date +'%Y%m%d%H%M%S_1.png') && notify-send 'Screenshot Saved'


# SUBMAPS (Volume + Windows Managment)
# enters "volume mode":
# bind= SUPER CTRL ALT, T, submap, volume # this is for testing only, ignore please
# bind = $mainMod, equal, submap, volume
# submap = volume
# bind = , equal, exec, $volume --inc
# bind = , minus, exec, $volume --dec
# bind = , 0, exec, $volume --toggle
# bind = , 9, exec, $volume --toggle-mic
# bind = , escape, submap, reset
# submap = reset

# Resize
bind = $mainMod, R, submap, resize
submap = resize
binde = , H, resizeactive,-50 0
binde = , L, resizeactive,50 0
binde = , K, resizeactive,0 -50
binde = , J, resizeactive,0 50
binde = , left, resizeactive,-50 0
binde = , right, resizeactive,50 0
binde = , up, resizeactive,0 -50
binde = , down, resizeactive,0 50
bind = , escape, submap, reset
submap = reset

# Move
bind = $mainMod, M, submap, move
submap = move
bind = , H, movewindow, l
bind = , L, movewindow, r
bind = , K, movewindow, u
bind = , J, movewindow, d
bind = , left, movewindow, l
bind = , right, movewindow, r
bind = , up, movewindow, u
bind = , down, movewindow, d
bind = , escape, submap, reset
submap = reset

# Focus
bind = $mainMod, F, submap, focus
submap = focus
bind = , left, movefocus, l
bind = , right, movefocus, r
bind = , up, movefocus, u
bind = , down, movefocus, d
bind = , H, movefocus, l
bind = , L, movefocus, r
bind = , K, movefocus, u
bind = , J, movefocus, d
bind = , escape, submap, reset
submap = reset

# The second bind is redundant but I'm used to it in DWM
bind = $mainMod SHIFT CTRL, comma, exec, hyprctl dispatch swapactiveworkspaces 0 1
bind = $mainMod SHIFT CTRL, period, exec, hyprctl dispatch swapactiveworkspaces 1 0

# focus monitor.
# Not tested, if monitor isn't connected, the second bind will execute
bind = $mainMod, comma, focusmonitor, 0
bind = $mainMod, comma, workspace, e-1
bind = $mainMod, period, focusmonitor, 1
bind = $mainMod, period, workspace, e+1

PORTAL
# https://bbs.archlinux.org/viewtopic.php?id=224787
# maybe add next line to .xinitrc or .xsession ???? TODO
# exec-once = dbus-update-activation-environment --systemd DBUS_SESSION_BUS_ADDRESS DISPLAY XAUTHORITY # TODO
# wiki suggests:
# exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
# exec-once = systemctl --user import-environment XAUTHORITY
exec-once = dbus-update-activation-environment --systemd DBUS_SESSION_BUS_ADDRESS DISPLAY SWAYSOCK WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP DBUS_SESSION_BUS_ADDRESS DISPLAY SWAYSOCK
exec-once = $scriptsDir/portal
# https://bbs.archlinux.org/viewtopic.php?id=280661
# The issue with portals was that hyprland wiki suggested making a script that restarts these portals, which killed the original running proccesses of these, and started them directly without using systemd. They then failed to restart because they were already running.

autostart  (BACKUP & useless)
-----------------------------------------------------------------
# Start swhkd
# ${SCRIPTSDIR}hotkeys &

# Start mpd
# exec mpd &

# variables
# config=$HOME/.config/hypr
# scripts=$config/scripts

# daemons
/usr/bin/numlockx on &
# mako &
# killall dunst
# dunst > /dev/null 2> /dev/null &.mx
# thunar --daemon &

# waybar
# $scripts/launch_waybar &



# wob... shows a bar wich fills w/ audio volume, not using any of that atm...
# recommended way, just uncomment these lines:
# set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
# exec rm -f $WOBSOCK && mkfifo $WOBSOCK && tail -f $WOBSOCK | wob

# one line, long unelegant way, eventually channge it for the two lines above?:
# exec rm -f $XDG_RUNTIME_DIR/wob.sock && mkfifo $XDG_RUNTIME_DIR/wob.sock && tail -f $XDG_RUNTIME_DIR/wob.sock | wob &

# or do what this says https://framagit.org/-/snippets/6723
# exec-once = ~/.config/hypr/scripts/wob-startup.sh
# exec = sh ~/.config/hypr/scripts/wob-startup.sh startup &


# examples:
# windowrule = move 100 100,^(kitty)$ # moves kitty to 100 100
# windowrule = animation popin,^(kitty)$ # sets the animation style for kitty
# windowrule = noblur,^(firefox)$ # disables blur for firefox
# windowrule = move cursor -50% -50%,^(kitty)$ # moves kitty to the center of the cursor
# windowrulev2 = bordercolor rgb(FF0000) rgb(880808),fullscreen:1 # set bordercolor to red if window is fullscreen
# windowrulev2 = bordercolor rgb(FFFF00),title:^(.*Hyprland.*)$ # set bordercolor to yellow when title contains Hyprland
# windowrule = opacity 1.0 override 0.5 override,^(kitty)$ # set opacity to 1.0 active and 0.5 inactive for kitty
# windowrule = rounding 10,^(kitty)$ # set rounding to 10 for kitty
# windowrulev2 = workspace 4, class:^(Apache Directory Studio)$
# windowrulev2 = bordercolor rgb(abe9b3) rgb(f28fad), floating:1
# windowrulev2 = bordercolor rgb(c4a7e7) rgb(f28fad), fullscreen:1
# windowrulev2 = opacity 0.8 0.8, pinned:1
# windowrulev2 = workspace 8 silent, class:^(Steam)$, title:^(Steam)$

# windowrulev2 = workspace 3, class:^(Microsoft\ Teams\ -\ Preview)$
# windowrulev2 = workspace 5, class:^(gnome-connections)$
# windowrulev2 = fullscreen, class:^(Torchlight2.bin.x86_64)$, title:^(Torchlight II v.1.25.5.4)$

# bind = $mainMod SHIFT, V, exec, hyprctl dispatch workspaceopt allfloat    # every1 floats
# bind = $mainMod, C, exec, $menu     # wofi alternative
# bindr = $mainMod SHIFT, C, exec, pkill bemenu || $scriptsDir/bemenu_input -l        #?
# layoutmsg, idk
# bind = $mainMod, J, layoutmsg, cyclenext
# bind = $mainMod, K, layoutmsg, cycleprev
# bind = $mainMod SHIFT, Return, layoutmsg, swapwithmaster
# bind = $mainMod, I, layoutmsg, addmaster
# bind = $mainMod, D, layoutmsg, removemaster
# bind = $mainMod, L, exec, $scriptsDir/changeLayout
# bind = $triMod, L, exec, $lock


# bind = $mainMod, Escape, exec, $wlogout
# // Test rofi logout... no keybinds though which sux
# bind = $mainMod SHIFT, Escape, exec, $HOME/.config/rofi/scripts/powermenu_t3
# bind = $mainMod, Y, exec, $term -1 --class update -T update -e cava
# bind = $mainMod SHIFT, Y, exec, [float] $term -1 --class clock -T clock -e tty-clock -c -B -C 7 -r -s -f "%A, %B, %d"

# Night mode (blue filter)
bind = $triMod, F, exec, hyprctl keyword decoration:screen_shader $scriptsDir/flux.glsl
bind = $mainMod SHIFT, F, exec, hyprctl keyword decoration:screen_shader "[[EMPTY]]"

    # PROxZIMA's dotfiles
    # https://github.com/PROxZIMA/.dotfiles/tree/master/.config/hypr
    # dim_inactive = false
    # dim_strength = 0.05
    # blur = true
    # blur_size = 5
    # blur_passes = 4
    # blur_xray = true
    # blur_ignore_opacity = true
    # shadow_ignore_window = true
    # shadow_range = 20
    # shadow_render_power = 3
    # col.shadow = 0x55161925
    # col.shadow_inactive = 0x22161925
    # active_opacity = 0.95
    # inactive_opacity = 0.8
    # fullscreen_opacity = 0.95

# logout (old)
bind= CTRL,Delete,exec, pkill firedragon thunar qbittorrent; sleep 3; pkill Hyprland
# shutdown now
bind= $triMod,Delete,exec,notify-send -h int:value:88 "POWER-OFF..."; pkill firedragon thunar qbittorrent; sleep 3; systemctl poweroff
# restart
bind= CTRL ALT,Delete,exec,notify-send -h int:value:88 "RESTARTING..."; pkill firedragon thunar qbittorrent; sleep 3; ; shutdown -r now
#bind= $triMod,Delete,exec,systemctl poweroff; notify-send -h  int:value:66 "POWER-OFF..."
bind= $triMod,XF86Monlock,exec,hyprctl dispatch dpms off       # TODO 
# ' resume 'hyprctl dispatch dpms on' before-sleep '$lock'


# exit script:
# TODO: kill thunar before loop:
# pkill -HUP $(pgrep -i thunar)
# pkill -15 'thunar|qbittorrent'
# pkill -3 'firedragon|thunar|qbittorrent'
# pkill 'konsole|kitty'
# pkill $(pgrep ^firedragon|thunar|qbittorrent$)
# **ChatGPT suggestions**:
# pkill -TERM thunar
# pkill -INT thunar

# alternatives:
# /sbin/shutdown -h now
# systemctl poweroff
# /sbin/shutdown -P now


# iamverysimp1e's alternative script using pamixer:
# https://github.com/iamverysimp1e/dots/blob/main/configs/hypr/scripts/volume
# 
# up() {
# pamixer -i 5
# volume=$(pamixer --get-volume)
# [ $volume -lt 100 ] && volume=`expr $volume`  
# dunstify -a "VOLUME" "Volume : $volume%" -h int:value:"$volume" -i audio-volume-high-symbolic -r 2593 -u normal
# canberra-gtk-play -i audio-volume-change -d "changevolume"
# }
# down() {
# pamixer -d 5
# volume=$(pamixer --get-volume)
# [$volume -gt 0 ] && volume=`expr $volume`  
# dunstify -a "VOLUME" "Volume : $volume%" -h int:value:"$volume" -i audio-volume-low-symbolic -r 2593 -u normal
# canberra-gtk-play -i audio-volume-change -d "changevolume"
# }
# mute() {
# muted="$(pamixer --get-mute)"
# if $muted; then
#   pamixer -u
#   dunstify -a "VOLUME" "UNMUTED" -i audio-volume-high-symbolic -r 2593 -u normal
# else 
#   pamixer -m
#   dunstify -a "VOLUME" "MUTED" -i audio-volume-muted-symbolic -r 2593 -u normal
# fi
# }


# https://www.shellcheck.net/wiki/SC2219
# let "h -= 19";    

# https://www.shellcheck.net/wiki/SC2046
# Line 73:
#     xdotool windowunmap $(xdotool getactivewindow)
#                         ^-- SC2046 (warning): Quote this to prevent word splitting.
# xdotool windowunmap "$(xdotool getactivewindow)"

# Line 81:
#   bg='1e1e2e' bgl='313244' fg='d9e0ee'
#               ^-- SC2034 (warning): bgl appears unused. Verify use (or export if used externally).
 
# Line 82:
#   red='f38ba8' green='a6e3a1' yellow='f9e2af'
#                ^-- SC2034 (warning): green appears unused. Verify use (or export if used externally).
#                               ^-- SC2034 (warning): yellow appears unused. Verify use (or export if used externally).

# hyprland.conf
bind= $triMod,1,exec,pkill mpvpaper; mpvpaper DP-3 -o "--loop-file=yes --mute=yes --video-unscaled=yes" /home/n30/Videos/Hidamari/gravity.mp4
bind= $triMod,2,exec,pkill mpvpaper; mpvpaper DP-3 -o "--loop-file=yes --mute=yes --video-unscaled=no" /run/media/n30/nvme_chivos/SteamLibrary/steamapps/workshop/content/431960/2523183859/AlternateRealities.mp4


windowrule = idleinhibit focus,^(code)(.*)$
windowrule = idleinhibit focus,^(Brave)(.*)$
windowrule = idleinhibit focus,^(*.exe)(.*)$
windowrule = idleinhibit focus,^(steam_app)(.*)$
windowrule = idleinhibit focus,^($term)(.*)$
windowrule = idleinhibit focus,^(code|firedragon|brave|*.exe)(.*)$


bind= CTRL ALT,right,workspace,e+1 ; play -v 0.4 "$HOME/.config/hypr/sounds/change_workspace.wav"


# https://github.com/hyprwm/hyprland-plugins/tree/main/borders-plus-plus    
# (Adds one or two additional borders to windows) TODO: not working atm
plugin {

    borders-plus-plus {
        add_borders = 1 # 0 - 2
        col.border_1 = rgb(ffffff) # example col for border 1
        col.border_2 = rgb(2222ff) # example col for border 2
    }
}




test
bind = SUPER, E, exec, [workspace 2 silent;float;noanim] kitty

bind= $triMod,l, exec, [float;pin;centerwindow] kitty --title kitty_test
bind= $triMod,l, exec, [hyprctl dispatcher splitratio 0.19] kitty --title kitty_test
windowrule=dispatcher splitratio 0.19,title:^(kitty_test)$

------------------------------------------------------------------------
countdown() {
  local start=$1
  while (( $start > 0 )); do
    'play -v 0.9 "$soundsDir"/change_workspace.wav'
    (( h -= 19 )) || true
    notify-send --app-name exit -t $t -e -h int:value:"$h" \
    -u normal \
    -i $icon \
    "POWERing-OFF...⌛ in "$start"'s";
    sleep 1.
    ((start--))
  done
}
countdown 2 &
# Wait for the countdown to finish or the escape key to be pressed
sleep 2 
# Check if the escape key was pressed
if [ $(xset -q | grep '^[ ]*Monitor' | grep -o 'Off' | wc -l) -eq 0 ]; then
  notify-send "???????????????" "️0️☠️" -e -u normal -i ☠️
fi
# Wait for the countdown to finish or the escape key to be pressed
# sleep 2 
# sleep .5 &
notify-send -e t- 555 "The countdown has finished." -e -u normal &




------------------------------------------------------------------------
countdown() {
  local start=$1
  while (( $start > 0 )); do
    (( h -= 19 )) || true
    notify-send --app-name exit -t $t -e -h int:value:$h \
    -u normal \
    -i $icon \
    "POWERing-OFF...⌛ in $i's";
    sleep 1
    ((start--))
  done
}

# Start the countdown
countdown 2 &

# Wait for the countdown to finish or the escape key to be pressed
while [ $SECONDS -lt 2 ]; do
  read -t 1 -n 1
  if [ $? = 0 ]; then
  notify-send -e -t 999 -u 'normal' "You pressed a keyboard key!"  exit
  fi
done

# If the escape key wasn't pressed, display the notification
notify-send "???????????????" "️☠️" -e -t 999 -u 'normal' -i ☠️;



------------------------------------------------------------------------
test() {
countdown() {
  local start=$1
  while (( $start > 0 )); do
    (( h -= 19 )) || true
    notify-send --app-name exit -t $t -e -h int:value:$h \
    -u normal \
    -i $icon \
    "POWERing-OFF...⌛ in $start's";

    read -t 1 -n 1
    if [ $? = 0 ]; then
      notify-send -e -t 999 -u normal "You pressed a keyboard key!"
      exit -1
    fi
    sleep 1
    ((start--))
  done
}

# Start the countdown
countdown 3
notify-send "???????????????" "️☠️" -e -t 999 -u normal -i ☠️
# sleep 3


------------------------------------------------------------------------
if timeout 1s hyprctl subscribe key_press >/dev/null 2>&1; then
    notify-send -e -t 999 -u 'normal' "You pressed a keyboard key!"
    exit
fi




------------------------------------------------------------------------
test() {
countdown() {
  local start=$1
  while (( $start > 0 )); do
    (( h -= 19 )) || true
    notify-send --app-name exit -t $t -e -h int:value:$h \
    -u normal \
    -i $icon \
    "POWERing-OFF...⌛ in $start's";

  if timeout 1s hyprctl wait key_press; then
    notify-send -e -t 999 -u normal "You pressed a keyboard key!"
    break
  fi
  sleep 1
  ((start--))
  done
}




------------------------------------------------------
This script will continuously monitor the keyboard events using hyprctl and notify you when the Escape key is pressed. It will break out of the loop once the key is detected.

# Start the countdown
# countdown 1 &
while true; do
  if hyprctl seat keyboard | grep -q 'keycode: 9,'; then
     notify-send -e -t 999 -u normal "You pressed a keyboard key!"
     break
  else
  countdown 3
  fi
done

notify-send "☠️☠️☠️☠️☠️☠️☠️☠️☠️" "️.................................cya later aligator" -e -t 999 -u normal -i ☠️
pkill exit    # TODO: erase it when ur done.








------------------------------------------------------------------------
test() {
countdown() {
  local i=$1
  while (( $i > 0 )); do
    play -v 0.1 "$soundsDir/change_workspace.wav"
    (( h -= 29 )) || true
    notify-send --app-name exit -t $t -e -h int:value:$h \
    -u normal \
    -i $icon \
    "POWERing-OFF...⌛ in $i's";
    sleep 1
    ((i--))
  done
}

# Start the countdown
countdown 3

notify-send "???????????????" "️☠️" -e -t 999 -u normal -i ☠️
pkill exit    # TODO: erase it
}



------------------------------------------------------
test() {
# Start the countdown
countdown 2 &

timeout=2  # timeout after some seconds
end_time=$(($(date +%s) + $timeout))

while [ $(date +%s) -lt $end_time ]; do
  if hyprctl seat keyboard | grep -q 'keycode: 9,'; then
     notify-send -e -t 999 -u normal "Escape key pressed!"
     break
  fi
  sleep 1
done

if [ $(date +%s) -ge $end_time ]; then
  sleep 1
  notify-send "☠️☠️☠️☠️☠️☠️☠️☠️☠️" "️.................................cya later aligator" -e -t 999 -u normal -i ☠️
  pkill exit    # TODO: erase it when ur done.
fi
}






------------------------------------------------------
test() {
# Start the countdown
countdown 2 &

timeout=2  # timeout after some seconds
end_time=$(($(date +%s) + $timeout))
while [ $(date +%s) -lt $end_time ]; do
    if wev | grep -q 'keyboard_key.*code'; then
     notify-send -e -t 999 -u normal "key pressed!"
     break
  fi
  sleep .1
done

if [ $(date +%s) -ge $end_time ]; then
  notify-send "☠️☠️☠️☠️☠️☠️☠️☠️☠️" "️.................................cya later aligator" -e -t 999 -u normal -i ☠️
  pkill exit    # TODO: erase it when ur done.
fi
}




-----------------------------------------------------countdown() {
  local start=$1
  while (( $start > 0 )); do
    play -v 0.9 "$soundsDir/change_workspace.wav"
    (( h -= 19 )) || true
    notify-send --app-name exit -t $t -e -h int:value:$h \
    -A "cancel, Cancel" \
    -u normal \
    -i $icon \
    "POWERing-OFF...⌛ in $i's";
    sleep 1
    ((start--))
 done
}
countdown 5 &
#  kill
 systemctl poweroff -i   #https://github.com/mrbman/hyprland-dotfiles/blob/master/.config/waybar/scripts/power-menu.sh

# #!/bin/bash
# # Display the notification
# notify-send "Hello" "This notification will disappear in 3 seconds." -t 3000 -u normal \
# --action="cancel,Cancel"
# # Wait for the notification to disappear or the cancel button to be clicked
# while pgrep -x notify-osd >/dev/null; do sleep 1; done
# # If the cancel button was clicked, remove the notification
# if [[ "$(notify-send -l 0 --icon=dialog-error 'Canceled' 'The notification has been canceled.')" = *"Canceled"* ]]; then
#     exit
# fi







-------------------------------------------
startup script:

# https://www.reddit.com/r/hyprland/comments/10ww8y7/what_are_the_best_desktopwrappersconfigs_to/
export XCURSOR_SIZE=32
set XCURSOR_SIZE 32
export XDG_CURRENT_DESKTOP=Hyprland
export XDG_SESSION_TYPE=wayland
export XDG_SESSION_DESKTOP=Hyprland

export QT_AUTO_SCREEN_SCALE_FACTOR=1
export QT_QPA_PLATFORMTHEME=qt5ct
# export QT_QPA_PLATFORM=wayland;xcb
export QT_WAYLAND_DISABLE_WINDOWDECORATION=1
export QT_QPA_PLATFORMTHEME=qt5c

export GDK_BACKEND="wayland,x11"
export SDL_VIDEODRIVER=x11
# export SDL_VIDEODRIVER=wayland    # commented on the post

# for flameshot:
export SDL_VIDEODRIVER=wayland
export _JAVA_AWT_WM_NONREPARENTING=1
export QT_QPA_PLATFORM="wayland;xcb"
export XDG_CURRENT_DESKTOP=Hyprland

# https://github.com/nosvagor/dotfiles/blob/main/bin/hyprwrap
export CLUTTER_BACKEND="x11"      # commented on the post
# export GDK_BACKEND="x11"          # commented on the post



# wallpaper & effects TODO:
# ${SCRIPTSDIR}/tools/dynamic &   # for the transitions of swww_fork??
# ${SCRIPTSDIR}/rgb &   # TODO file missing? I'm not sure what this does lol
# wallpaper animated waifu
# mpvpaper DP-3 -o "--loop-file=yes --mute=yes --video-unscaled=yes" $WALLSDIR/kda-21-9.mp4 &


# Apply themes
# ${SCRIPTSDIR}/gtkthemes & # TODO: ? nwg-look seems working fine tho
# TODO:
# cd ~ || exit    # ?

---

!!!!!!!!!!!!!!!!!!!!!!!
HYPRLAND.CONF

31
# stefonarch's dotfiles
# https://github.com/stefonarch/LXQt-Wayland-files/blob/9d13e8c1bf5fb28abce1efca340ba38d9d976cd2/start_scripts/startlxqthyprland#L73
# exec-once = $HOME/.config/hypr/scripts/LXQt-Wayland.sh

36
# Gnome applications slow start due to failing service
# https://bbs.archlinux.org/viewtopic.php?id=224787 
# maybe add next line to .xinitrc or .xsession ???? TODO:
# exec-once = dbus-update-activation-environment --systemd DBUS_SESSION_BUS_ADDRESS DISPLAY XAUTHORITY # TODO:
# wiki suggests:
# exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
# exec-once = systemctl --user import-environment XAUTHORITY

