#!/bin/sh
# Screenshot helper for hyprland.
# Copyright 2023, Adrian Lopez.

if [ -z "$WAYLAND_DISPLAY" ]; then
	(>&2 echo Wayland is not running)
	exit 1
fi

## If there's a file ~/.config/hyprshotgun/hyprshotgun.conf,
## it sources the contents of the file adding the variables, 
## otherwise, will set default values for such variables:
if [ -f ~/.config/hyprshotgun/hyprshotgun.conf ]; then
	. ~/.config/hyprshotgun/hyprshotgun.conf
else
	if [ -z "$HYPRSHOTGUN_SCREENSHOTS" ]; then
		HYPRSHOTGUN_SCREENSHOTS=$(xdg-user-dir PICTURES)
	fi

	if [ -z "$HYPRSHOTGUN_SCREENSHOTS" ]; then
		HYPRSHOTGUN_SCREENSHOTS=$(xdg-user-dir PICTURES)
	fi
	
	if [ -z "$HYPRSHOTGUN_SCREENSHOTS" ]; then
	HYPRSHOTGUN_SCREENSHOTS=$(xdg-user-dir PICTURES)
	fi

	SCREENSHOT_TIMESTAMP=$(date "+${HYPRSHOTGUN_DATEFMT:-%F_%H-%M-%S_%N}")
	SCREENSHOT_FULLNAME="$HYPRSHOTGUN_SCREENSHOTS"/ss_${SCREENSHOT_TIMESTAMP}.png	fi	
fi

readonly filter='
# returns the focused node by recursively traversing the node tree
def find_focused_node:
    if .focused then . else (if .nodes then (.nodes | .[] | find_focused_node) else empty end) end;
# returns a string in the format that grim expects
def format_rect:
    "\(.rect.x),\(.rect.y) \(.rect.width)x\(.rect.height)";
find_focused_node | format_rect
'

make_screenshot() {
	case "$1" in
		-h|--help)

      echo '* NORMAL USAGE:'
      echo '-----------------'
      echo '* Local screenshot:'
      echo 'hyprshotgun [display|window|region|alldisplays]'
      echo '' 
      echo '* Online screenshot:'
			echo 'Usage: hyprshotgun [display|window|region|alldisplays] upload'
      echo ''
      echo '* ADVANCED:'
      echo '-----------------'
      echo 'Changing screenshot directory:'
	  echo 'You can choose a different directory by setting the variable: HYPRSHOTGUN_SCREENSHOTS="/my/screenshot/directory/" located in ~/.config/.hyprshotgun.conf, there you can give'
	#   echo 'By default the screenshots are saved in XDG_PICTURES_DIR. You can choose a different directory by setting the env: HYPRSHOTGUN_SCREENSHOTS="/my/screenshot/directory/" Alternatively, you can put it on .config/.hyprshotgun.conf'

			return 0
			;;
		region)
      grimblast copysave area "$2"
			;;
		window)
      grimblast copysave active "$2"
			;;
		alldisplays)
      grimblast copysave screen "$2"
      ;;
		*)
			grimblast copysave output "$2"
      ;;
	esac
}

copy_to_clipboard() {
	if type wl-copy >/dev/null  2>&1; then
		if [ -z $HYPRSHOTGUN_WL_COPY_FILE ]; then
			printf "%s" "$1" | wl-copy 
		else
			wl-copy < "$SCREENSHOT_FULLNAME"
		fi
	elif type xsel >/dev/null  2>&1; then
		printf "%s" "$1" | xsel --clipboard
		unset HYPRSHOTGUN_WL_COPY_FILE
	elif type xclip &>/dev/null; then
		printf "%s" "$1" | xclip -selection clipboard
		unset HYPRSHOTGUN_WL_COPY_FILE
	else
		echo "$1"
	fi
}

show_message() {
	if type notify-send >/dev/null  2>&1; then
		notify-send --expire-time=3000 --category=screenshot --icon="$2" "$3" "$1"
	fi
}

upload_screenshot() {
	if [ -f "$1" ]; then
		if type curl >/dev/null  2>&1; then
			curl -s -F "file=@\"$1\";filename=.png" 'https://0x0.st'
		fi
	fi
}

make_screenshot "$1" "$SCREENSHOT_FULLNAME"

if [ ! -f "$SCREENSHOT_FULLNAME" ]; then
	exit;
fi

case "$2" in
	upload)
		SCREENSHOT_LOCATOR=$(upload_screenshot "$SCREENSHOT_FULLNAME")
		if [ -z $SCREENSHOT_LOCATOR ]; then
			copy_to_clipboard "$SCREENSHOT_FULLNAME"
			show_message "$SCREENSHOT_FULLNAME" document-save "Screenshot path"
			if [ ! -z $HYPRSHOTGUN_WL_COPY_FILE ]; then
				show_message "Screenshot was copied to clipboard.\\nFeel free to paste it." "$SCREENSHOT_FULLNAME" "Screenshot image"
			fi
		else
			copy_to_clipboard "$SCREENSHOT_LOCATOR"
			show_message "$SCREENSHOT_LOCATOR" document-send "Screenshot URL"
			if [ ! -z $HYPRSHOTGUN_WL_COPY_FILE ]; then
				show_message "Screenshot was copied to clipboard.\\nFeel free to paste it." "$SCREENSHOT_FULLNAME" "Screenshot image"
			fi
		fi
		;;
	*)
		copy_to_clipboard "$SCREENSHOT_FULLNAME"
		show_message "$SCREENSHOT_FULLNAME" document-save "Screenshot path"
		if [ ! -z $HYPRSHOTGUN_WL_COPY_FILE ]; then
			show_message "Screenshot was copied to clipboard.\\nFeel free to paste it." "$SCREENSHOT_FULLNAME" "Screenshot image"
		fi
esac
