#!/usr/bin/env bash
# Simple script that does 3 things:
# - handles startup and kill commands
# - changes volume, mute status, shows gui settings
# - shows appropriate wob overlay if anything changed
# Mainly written to work with PulseAudio but can be modified for alsa
# Utilizes Wayland based overlay progress bar program - wob
# License: CC0 1.0 Universal
# Requirements: wob (and Wayland), pulseaudio, pavucontrol or pavucontrol-qt, bash
# Example usage:
# $ ./volume.sh startup &
# $ ./volume.sh up
# $ ./volume.sh down
# $ ./volume.sh togglemute
# $ ./volume.sh kill

command="$1"
show=''

# pactl set-sink-volume @DEFAULT_SINK@ +5% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1| awk '{print substr($5, 1, length($5)-1)}' > $XDG_RUNTIME_DIR/wob.sock
    
# pactl set-sink-volume @DEFAULT_SINK@ -5% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}' > $XDG_RUNTIME_DIR/wob.sock

if [ "$command" == 'up' ]; then
	pactl set-sink-volume @DEFAULT_SINK@ +5% && 
	show=true
elif [ "$command" == 'down' ]; then
	pactl set-sink-volume @DEFAULT_SINK@ -5% && 
	show=true
elif [ "$command" == 'togglemute' ]; then
	pactl set-sink-mute @DEFAULT_SINK@ toggle  && notify-send -h  int:value:66 " MUTE "
	show=true
elif [ "$command" == 'mute' ]; then
	pactl set-sink-mute @DEFAULT_SINK@ 1
	show=true
elif [ "$command" == 'unmute' ]; then
	pactl set-sink-mute @DEFAULT_SINK@ 0
	show=true
elif [ "$command" == 'settings' ]; then
	pavucontrol || pavucontrol-qt
elif [ "$command" == 'startup' ]; then # isn't used in this config, just here as reference
	rm -f "${XDG_RUNTIME_DIR}/wob.sock" && mkfifo "${XDG_RUNTIME_DIR}/wob.sock" && tail -f "${XDG_RUNTIME_DIR}/wob.sock" | wob
elif [ "$command" == 'kill' ]; then # run when wob is no longer needed
	pkill wob
fi

if [ -n "$show" ]; then
	volume_amount="$(pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}')"
	background_color='#000000FF'
	border_color='#FFFFFFFF'
	bar_color='#FFFFFFFF'
	# if muted, change the background color to red
	[ "$(pactl get-sink-mute @DEFAULT_SINK@ | awk '{print $2}')" == 'yes' ] && background_color='#FF000088'
	# echo to the sock file what to show
	# <value> or
	# <value> <#background_color> <#border_color> <#bar_color>
	echo "${volume_amount} ${background_color} ${border_color} ${bar_color}" > "${XDG_RUNTIME_DIR}/wob.sock"
fi
